clear all; clc; close all;
% Load JSON wind data
data = jsondecode(fileread('smaller_area_wind_data.json'));
% Center point (longitude, latitude)
center_lon = -96.94;
center_lat = 33.06;
% Convert all coordinates to meters relative to the center
% Earth's radius in meters
R = 6371000; 
% Conversion factor for degrees to radians
deg_to_rad = pi / 180;

% Assume wind_data contains fields for coordinates, wind_speed, and wind_direction
wind_data = data.wind_data;

% Extract longitude, latitude, wind speed, and direction
longitudes = cellfun(@(c) c(1), {wind_data.coordinates});
latitudes = cellfun(@(c) c(2), {wind_data.coordinates});
wind_speeds = [wind_data.wind_speed];
wind_directions = [wind_data.wind_direction]; % Assuming this is in degrees from north

% Convert wind speed and direction into north and east components
U = wind_speeds .* cosd(wind_directions); % North component
V = wind_speeds .* sind(wind_directions); % East component

% Create grids for longitude and latitude
[unique_lons, ~, lon_idx] = unique(longitudes);
[unique_lats, ~, lat_idx] = unique(latitudes);
grid_U = accumarray([lat_idx, lon_idx], U, [], @mean); % North component grid
grid_V = accumarray([lat_idx, lon_idx], V, [], @mean); % East component grid


% Define aircraft position (x, y corresponds to longitude, latitude)
aircraft_lon = -96.9; % Example longitude
aircraft_lat = 33.1;  % Example latitude

% Interpolate wind speed components at aircraft position
interpolated_U = interp2(unique_lons, unique_lats', grid_U, aircraft_lon, aircraft_lat, 'linear');
interpolated_V = interp2(unique_lons, unique_lats', grid_V, aircraft_lon, aircraft_lat, 'linear');


